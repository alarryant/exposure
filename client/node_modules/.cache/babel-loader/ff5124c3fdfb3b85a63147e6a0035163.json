{"ast":null,"code":"import _classCallCheck from \"/vagrant/week8/exposure/exposure-final/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/vagrant/week8/exposure/exposure-final/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/vagrant/week8/exposure/exposure-final/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/vagrant/week8/exposure/exposure-final/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/vagrant/week8/exposure/exposure-final/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/vagrant/week8/exposure/exposure-final/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/vagrant/week8/exposure/exposure-final/src/components/Availability.jsx\";\nimport React from 'react';\nimport DayPicker from 'react-day-picker';\nimport axios from 'axios';\nimport 'react-day-picker/lib/style.css';\n\nvar EditAvailability =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditAvailability, _React$Component);\n\n  function EditAvailability(props) {\n    var _this;\n\n    _classCallCheck(this, EditAvailability);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditAvailability).call(this, props));\n    _this.handleDayClick = _this.handleDayClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      selectedDay: undefined,\n      disabledDays: undefined\n    };\n    return _this;\n  }\n\n  _createClass(EditAvailability, [{\n    key: \"handleDayClick\",\n    value: function handleDayClick(day) {\n      var _this2 = this;\n\n      axios.post(\"/artists/\".concat(this.props.artistId, \"/editavailability\"), {\n        selectedDay: day\n      }).then(function (res) {\n        _this2.setState({\n          selectedDay: day,\n          disabledDays: res.data\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      console.log(\"this is comp will mt avail\", this.props.artistId);\n      axios.get(\"/artists/\".concat(this.props.artistId, \"/availability\")).then(function (res) {\n        // console.log(\"Component will mount in avail\", res);\n        _this3.setState({\n          disabledDays: res.data\n        });\n      });\n    } // componentDidUpdate() {\n    //   axios.get(`/artists/${this.props.artistId}/availability`)\n    //    .then((res) => {\n    //     console.log(\"Component will mount in avail update\", res);\n    //       this.setState({disabledDays: res.data});\n    //     });\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"this is in render of avail.jsx\", this.state.disabledDays);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(DayPicker, {\n        onDayClick: this.handleDayClick,\n        selectedDays: this.state.selectedDay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), this.state.selectedDay ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"You clicked \", this.state.selectedDay.toLocaleDateString()) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Please select a day.\"));\n    }\n  }]);\n\n  return EditAvailability;\n}(React.Component); // class Availability extends React.Component {\n//   static defaultProps = {\n//     numberOfMonths: 1,\n//   };\n//   constructor(props) {\n//     super(props);\n//     this.handleDayClick = this.handleDayClick.bind(this);\n//     this.handleResetClick = this.handleResetClick.bind(this);\n//     this.handleSubmitClick = this.handleSubmitClick.bind(this);\n//     this.state = this.getInitialState();\n//   }\n//   getInitialState() {\n//     return {\n//       from: undefined,\n//       to: undefined,\n//     };\n//   }\n//   handleDayClick(day) {\n//     const range = DateUtils.addDayToRange(day, this.state);\n//     this.setState(range);\n//   }\n//   handleResetClick() {\n//     this.setState(this.getInitialState());\n//   }\n//   handleSubmitClick() {\n//     this.props.saveAvailability({start_date: this.state.from, end_date: this.state.to});\n//   }\n//   render() {\n//     // this.props.saveAvailability({from, to});\n//     const { from, to } = this.state;\n//     const modifiers = { start: from, end: to };\n//     return (\n//       <div className=\"RangeExample\">\n//         <p>\n//           {!from && !to && 'Please select the first day.'}\n//           {from && !to && 'Please select the last day.'}\n//           {from &&\n//             to &&\n//             `Selected from ${from.toLocaleDateString()} to\n//                 ${to.toLocaleDateString()}`}{' '}\n//           {from &&\n//             to && (\n//               <button className=\"link\" onClick={this.handleResetClick}>\n//                 Reset\n//               </button>\n//             )}\n//             <button onClick={this.handleSubmitClick}>Submit</button>\n//         </p>\n//         <DayPicker\n//           className=\"Selectable\"\n//           numberOfMonths={this.props.numberOfMonths}\n//           selectedDays={[from, { from, to }]}\n//           modifiers={modifiers}\n//           onDayClick={this.handleDayClick}\n//           initialMonth={new Date(2018, 11)}\n//           disabledDays={[\n//         new Date(2018, 11, 12),\n//         new Date(2018, 11, 2),\n//         {\n//           after: new Date(2018, 11, 20),\n//           before: new Date(2018, 11, 25),\n//         },\n//       ]}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n\nexport default EditAvailability;","map":{"version":3,"sources":["/vagrant/week8/exposure/exposure-final/src/components/Availability.jsx"],"names":["React","DayPicker","axios","EditAvailability","props","handleDayClick","bind","state","selectedDay","undefined","disabledDays","day","post","artistId","then","res","setState","data","console","log","get","toLocaleDateString","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,gCAAP;;IAEMC,gB;;;;;AACJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,0FAAMA,KAAN;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,uDAAtB;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAEC,SADF;AAEXC,MAAAA,YAAY,EAAED;AAFH,KAAb;AAHiB;AAOlB;;;;mCACcE,G,EAAK;AAAA;;AAClBT,MAAAA,KAAK,CAACU,IAAN,oBAAuB,KAAKR,KAAL,CAAWS,QAAlC,wBAA+D;AAACL,QAAAA,WAAW,EAAEG;AAAd,OAA/D,EAAmFG,IAAnF,CAAwF,UAACC,GAAD,EAAS;AAC/F,QAAA,MAAI,CAACC,QAAL,CAAc;AAAER,UAAAA,WAAW,EAAEG,GAAf;AAAoBD,UAAAA,YAAY,EAAEK,GAAG,CAACE;AAAtC,SAAd;AACD,OAFD;AAGD;;;wCAEmB;AAAA;;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0C,KAAKf,KAAL,CAAWS,QAArD;AACAX,MAAAA,KAAK,CAACkB,GAAN,oBAAsB,KAAKhB,KAAL,CAAWS,QAAjC,oBACEC,IADF,CACO,UAACC,GAAD,EAAS;AACd;AACE,QAAA,MAAI,CAACC,QAAL,CAAc;AAACN,UAAAA,YAAY,EAAEK,GAAG,CAACE;AAAnB,SAAd;AACD,OAJH;AAKD,K,CAED;AACA;AACA;AACA;AACA;AACA;AACA;;;;6BAES;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8C,KAAKZ,KAAL,CAAWG,YAAzD;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,UAAU,EAAE,KAAKL,cADnB;AAEE,QAAA,YAAY,EAAE,KAAKE,KAAL,CAAWC,WAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKG,KAAKD,KAAL,CAAWC,WAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAgB,KAAKD,KAAL,CAAWC,WAAX,CAAuBa,kBAAvB,EAAhB,CADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCARJ,CADF;AAaD;;;;EA/C4BrB,KAAK,CAACsB,S,GAkDrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAenB,gBAAf","sourcesContent":["import React from 'react';\nimport DayPicker from 'react-day-picker';\nimport axios from 'axios';\n\nimport 'react-day-picker/lib/style.css';\n\nclass EditAvailability extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.state = {\n      selectedDay: undefined,\n      disabledDays: undefined\n    };\n  }\n  handleDayClick(day) {\n    axios.post(`/artists/${this.props.artistId}/editavailability`, {selectedDay: day}).then((res) => {\n      this.setState({ selectedDay: day, disabledDays: res.data });\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"this is comp will mt avail\", this.props.artistId);\n    axios.get(`/artists/${this.props.artistId}/availability`)\n     .then((res) => {\n      // console.log(\"Component will mount in avail\", res);\n        this.setState({disabledDays: res.data});\n      });\n  }\n\n  // componentDidUpdate() {\n  //   axios.get(`/artists/${this.props.artistId}/availability`)\n  //    .then((res) => {\n  //     console.log(\"Component will mount in avail update\", res);\n  //       this.setState({disabledDays: res.data});\n  //     });\n  // }\n\n  render() {\n    console.log(\"this is in render of avail.jsx\", this.state.disabledDays);\n    return (\n      <div>\n        <DayPicker\n          onDayClick={this.handleDayClick}\n          selectedDays={this.state.selectedDay}\n        />\n        {this.state.selectedDay ? (\n          <p>You clicked {this.state.selectedDay.toLocaleDateString()}</p>\n        ) : (\n          <p>Please select a day.</p>\n        )}\n      </div>\n    );\n  }\n}\n\n// class Availability extends React.Component {\n//   static defaultProps = {\n//     numberOfMonths: 1,\n//   };\n//   constructor(props) {\n//     super(props);\n//     this.handleDayClick = this.handleDayClick.bind(this);\n//     this.handleResetClick = this.handleResetClick.bind(this);\n//     this.handleSubmitClick = this.handleSubmitClick.bind(this);\n//     this.state = this.getInitialState();\n//   }\n//   getInitialState() {\n//     return {\n//       from: undefined,\n//       to: undefined,\n//     };\n//   }\n//   handleDayClick(day) {\n//     const range = DateUtils.addDayToRange(day, this.state);\n//     this.setState(range);\n//   }\n//   handleResetClick() {\n//     this.setState(this.getInitialState());\n//   }\n\n//   handleSubmitClick() {\n//     this.props.saveAvailability({start_date: this.state.from, end_date: this.state.to});\n//   }\n\n//   render() {\n//     // this.props.saveAvailability({from, to});\n//     const { from, to } = this.state;\n//     const modifiers = { start: from, end: to };\n//     return (\n//       <div className=\"RangeExample\">\n//         <p>\n//           {!from && !to && 'Please select the first day.'}\n//           {from && !to && 'Please select the last day.'}\n//           {from &&\n//             to &&\n//             `Selected from ${from.toLocaleDateString()} to\n//                 ${to.toLocaleDateString()}`}{' '}\n//           {from &&\n//             to && (\n//               <button className=\"link\" onClick={this.handleResetClick}>\n//                 Reset\n//               </button>\n\n//             )}\n//             <button onClick={this.handleSubmitClick}>Submit</button>\n//         </p>\n//         <DayPicker\n//           className=\"Selectable\"\n//           numberOfMonths={this.props.numberOfMonths}\n//           selectedDays={[from, { from, to }]}\n//           modifiers={modifiers}\n//           onDayClick={this.handleDayClick}\n//           initialMonth={new Date(2018, 11)}\n//           disabledDays={[\n//         new Date(2018, 11, 12),\n//         new Date(2018, 11, 2),\n//         {\n//           after: new Date(2018, 11, 20),\n//           before: new Date(2018, 11, 25),\n//         },\n//       ]}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\nexport default EditAvailability\n"]},"metadata":{},"sourceType":"module"}