{"ast":null,"code":"import _classCallCheck from \"/vagrant/week8/exposure/exposure-final/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/vagrant/week8/exposure/exposure-final/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/vagrant/week8/exposure/exposure-final/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/vagrant/week8/exposure/exposure-final/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/vagrant/week8/exposure/exposure-final/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/vagrant/week8/exposure/exposure-final/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/vagrant/week8/exposure/exposure-final/src/components/Availability.jsx\";\nimport React from 'react';\nimport DayPicker from 'react-day-picker';\nimport axios from 'axios';\nimport 'react-day-picker/lib/style.css';\n\nvar EditAvailability =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditAvailability, _React$Component);\n\n  function EditAvailability(props) {\n    var _this;\n\n    _classCallCheck(this, EditAvailability);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditAvailability).call(this, props));\n    _this.handleDayClick = _this.handleDayClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.formatDate = _this.formatDate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      selectedDay: null,\n      disabledDays: []\n    };\n    return _this;\n  }\n\n  _createClass(EditAvailability, [{\n    key: \"handleDayClick\",\n    value: function handleDayClick(day) {\n      var _this2 = this;\n\n      var alreadyDisabled = false;\n      this.state.disabledDays.forEach(function (disabledDay) {\n        var formattedDate = new Date(disabledDay.date).getTime();\n        var formattedSelectedDate = day.getTime();\n\n        if (formattedDate === formattedSelectedDate) {\n          return alreadyDisabled = true;\n        }\n      });\n\n      if (alreadyDisabled === true) {\n        return axios.post(\"/artists/\".concat(this.props.artistId, \"/removeavailability\"), {\n          selectedDay: day\n        }).then(function (res) {\n          _this2.setState({\n            selectedDay: day,\n            disabledDays: res.data,\n            message: \"You're now available on \".concat(day, \".\")\n          });\n        });\n      } else {\n        return axios.post(\"/artists/\".concat(this.props.artistId, \"/editavailability\"), {\n          selectedDay: day\n        }).then(function (res) {\n          _this2.setState({\n            selectedDay: day,\n            disabledDays: res.data,\n            message: \"You're not available on \".concat(day, \".\")\n          });\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      axios.get(\"/artists/\".concat(this.props.artistId, \"/availability\")).then(function (res) {\n        _this3.setState({\n          disabledDays: res.data,\n          message: 'Select a day to mark it as unavailable.'\n        });\n      });\n    }\n  }, {\n    key: \"formatDate\",\n    value: function formatDate() {\n      var disabledDays = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      return disabledDays.map(function (day) {\n        return new Date(day.date);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(DayPicker, {\n        onDayClick: this.handleDayClick,\n        selectedDays: this.state.selectedDay,\n        disabledDays: this.formatDate(this.state.disabledDays),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.state.message));\n    }\n  }]);\n\n  return EditAvailability;\n}(React.Component);\n\nexport default EditAvailability;","map":{"version":3,"sources":["/vagrant/week8/exposure/exposure-final/src/components/Availability.jsx"],"names":["React","DayPicker","axios","EditAvailability","props","handleDayClick","bind","formatDate","state","selectedDay","disabledDays","day","alreadyDisabled","forEach","disabledDay","formattedDate","Date","date","getTime","formattedSelectedDate","post","artistId","then","res","setState","data","message","get","map","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DayPicker from 'react-day-picker';\nimport axios from 'axios';\n\nimport 'react-day-picker/lib/style.css';\n\nclass EditAvailability extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.formatDate = this.formatDate.bind(this);\n    this.state = {\n      selectedDay: null,\n      disabledDays: [],\n    };\n  }\n  handleDayClick(day) {\n    let alreadyDisabled = false;\n    this.state.disabledDays.forEach((disabledDay) => {\n      let formattedDate = new Date(disabledDay.date).getTime();\n      let formattedSelectedDate = day.getTime();\n      if (formattedDate === formattedSelectedDate) {\n        return alreadyDisabled = true;\n      }\n    });\n    if (alreadyDisabled === true) {\n      return axios.post(`/artists/${this.props.artistId}/removeavailability`, {selectedDay: day}).then((res) => {\n        this.setState({selectedDay: day, disabledDays: res.data, message: `You're now available on ${day}.`});\n      });\n    } else {\n      return axios.post(`/artists/${this.props.artistId}/editavailability`, {selectedDay: day}).then((res) => {\n        this.setState({ selectedDay: day, disabledDays: res.data, message: `You're not available on ${day}.` });\n      });\n    }\n  }\n\n  componentDidMount() {\n    axios.get(`/artists/${this.props.artistId}/availability`)\n     .then((res) => {\n        this.setState({disabledDays: res.data, message: 'Select a day to mark it as unavailable.'});\n      });\n  }\n\n  formatDate(disabledDays=[]) {\n    return disabledDays.map((day) => {\n      return new Date(day.date);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <DayPicker\n          onDayClick={this.handleDayClick}\n          selectedDays={this.state.selectedDay}\n          disabledDays={this.formatDate(this.state.disabledDays)}\n        />\n        <p>{this.state.message}</p>\n      </div>\n    );\n  }\n}\n\nexport default EditAvailability\n"]},"metadata":{},"sourceType":"module"}